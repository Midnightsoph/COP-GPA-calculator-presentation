rs classes? (y or n): ";
        cin >> takingHonors;
        if (takingHonors == "y" || takingHonors == "Y" || takingHonors == "n" || takingHonors == "N") {
            validHonorsInput = true;
        } else {
            cout << "Invalid input. Please enter 'y' or 'n'. " << endl;
        }
    } while (!validHonorsInput);

    Student student(studentID, inputGradeLevel);

    if ((inputGradeLevel == "freshman" || inputGradeLevel == "sophomore" || inputGradeLevel == "junior" ||
         inputGradeLevel == "senior") && (takingHonors == "n" || takingHonors == "N")) {
        student.addCourse("Math", 4);
        student.addCourse("English", 4);
        student.addCourse("Science", 3);
        student.addCourse("History", 3);
        student.addCourse("Foreign Language", 3);
        student.addCourse("Computer Literacy", 3);
        student.addCourse("Elective", 2);
    } else if ((inputGradeLevel == "freshman" || inputGradeLevel == "sophomore" || inputGradeLevel == "junior" ||
                inputGradeLevel == "senior") && (takingHonors == "y" || takingHonors == "Y")) {
        student.addCourse("Honors Math", 4);
        student.addCourse("Honors English", 4);
        student.addCourse("Honors Science", 3);
        student.addCourse("Honors Foreign Language", 3);
        student.addCourse("Honors Computer Literacy", 3);
        student.addCourse("Honors Elective", 2);
    }

    cout << "\nEnter your grades for each class: \n" << endl;
    student.inputGrades();

    double gpa = student.calculateGPA();

    cout << "\nStudent ID: " << student.getStudentID() << endl;
    cout << "Grade Level: " << student.getGradeLevel() << endl;

    cout << "\nCourses and Grades:\n";
    Course **courses = student.getCourses();
    for (int i = 0; i < 7 && courses[i] != nullptr; ++i) {
        cout << courses[i]->getName() << ": " << courses[i]->getGrade() << endl;
    }
    cout << fixed << setprecision(2); // determines number of digits displayed after decimal point
    cout << "\nGPA: " << gpa << endl;

    for (int i = 0; i < 7 && courses[i] != nullptr; ++i) {
        delete courses[i]; // cleans up after use of heap
    }
    return 0;
}

